{"version":3,"sources":["./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { map, filter, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private REST_API_SERVER = \"http://localhost:3000/api\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAll(){\r\n    return this.httpClient.get(this.REST_API_SERVER)\r\n  }\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n<h1>Registered Employees</h1>\r\n<div class=\"d-flex justify-content-center\">\r\n<div class=\"spinner-border\" role=\"status\" >\r\n</div>\r\n</div>\r\n<table class=\"table\" id='tab'>\r\n    <thead>\r\n    <tr>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\">Position</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let e of stats;\">\r\n        <td>{{ e.radarChartData }}</td>\r\n        <td>{{ e.radarChartLabels }}</td>\r\n    </tr>\r\n    </tbody>\r\n</table>     \r\n\r\n\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public radarChartLabels = ['Q1', 'Q2', 'Q3', 'Q4'];\r\n  public radarChartData = [\r\n    {data: [120, 130, 180, 70], label: '2017'},\r\n    {data: [90, 150, 200, 45], label: '2018'}\r\n  ];\r\nstats: any = [];\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.retrieveData();\r\n  }\r\n\r\n  retrieveData() {\r\n    this.dataService.getAll().subscribe(\r\n        data => {\r\n          this.stats = data;\r\n          this.radarChartLabels = this.stats.radarChartLabels;\r\n          this.radarChartData = this.stats.radarChartData;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DataService } from './data.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n@NgModule({\r\n   declarations: [\r\n     AppComponent,\r\n   ],\r\n   imports: [\r\n     BrowserModule,\r\n     AppRoutingModule,\r\n     HttpClientModule\r\n   ],\r\n   providers: [ DataService ],\r\n   bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}