{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/data.service.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","DataService","httpClient","REST_API_SERVER","get","AppComponent","dataService","name","dataList","retrieveData","getAll","subscribe","data","error","console","log","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMA,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCNaC,W;AAIX,6BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAFZ,eAAAC,eAAA,GAAkB,2BAAlB;AAEuC;;;;iBAExC,kBAAM;AACX,mBAAO,KAAKD,UAAL,CAAgBE,GAAhB,CAAoB,KAAKD,eAAzB,CAAP;AACD;;;;;;;yBARUF,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUV;;AACI;;AAAI;;AAAY;;AACpB;;;;;;AADQ;;AAAA;;;;UCVCI,Y;AAIX,8BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAHb,eAAAC,IAAA,GAAO,CAAC,SAAD,CAAP;AACT,eAAAC,QAAA,GAAgB,EAAhB;AAEmD;;;;iBAEjD,oBAAW;AACT,iBAAKC,YAAL;AACD;;;iBAED,wBAAe;AAAA;;AACb,iBAAKH,WAAL,CAAiBI,MAAjB,GAA0BC,SAA1B,CACI,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACJ,QAAL,GAAgBI,IAAhB;AACA,mBAAI,CAACL,IAAL,GAAY,KAAI,CAACC,QAAL,CAAcD,IAA1B;AACD,aAJL,EAKI,UAAAM,KAAK,EAAI;AACPC,qBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAPL;AAQD;;;;;;;yBAnBUR,Y,EAAY,0H;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,sF;AAAA;AAAA;ADCzB;;AAAI;;AAAe;;AACnB;;AACI;;AACA;;AACI;;AAAgB;;AAAK;;AACzB;;AACA;;AACA;;AACA;;AAGA;;AACJ;;;;AAJsB;;AAAA;;;;;;;;;;;;;;;;;;;;;AEjBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoBaW,S;;;;;cAAAA,S;AAAS,oBAFP,2DAEO;;;;2BAATA,S;AAAS,S;AAAA,mBAHR,CAAE,yDAAF,C;AAAe,kBALjB,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAKiB;;;;4HAGhBA,S,EAAS;AAAA,yBAVjB,2DAUiB;AAVL,oBAGZ,uEAHY,EAIZ,oEAJY,EAKZ,qEALY;AAUK,S;AALD,O;;;;;;;;;;;;;;;;;ACdrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAMC,MAAM,GAAW,EAAvB;;UAQaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBC,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHxB,UAAI,sEAAYlB,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBoB,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIP,OAAO,CAACD,KAAR,CAAcQ,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { map, filter, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private REST_API_SERVER = \"http://localhost:3000/api\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAll(){\r\n    return this.httpClient.get(this.REST_API_SERVER)\r\n  }\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n<h1>Our Web Project</h1>\r\n<table class=\"table\" id='tab'>\r\n    <thead>\r\n    <tr>\r\n        <th scope=\"col\">Names</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let i of dataList;\">\r\n        <td>{{ i.name }}</td>\r\n    </tr>\r\n    </tbody>\r\n</table>   \r\n\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public name = ['default'];\r\ndataList: any = [];\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.retrieveData();\r\n  }\r\n\r\n  retrieveData() {\r\n    this.dataService.getAll().subscribe(\r\n        data => {\r\n          this.dataList = data;\r\n          this.name = this.dataList.name;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DataService } from './data.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n@NgModule({\r\n   declarations: [\r\n     AppComponent,\r\n   ],\r\n   imports: [\r\n     BrowserModule,\r\n     AppRoutingModule,\r\n     HttpClientModule\r\n   ],\r\n   providers: [ DataService ],\r\n   bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}