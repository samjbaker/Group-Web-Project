{"version":3,"sources":["webpack:///src/app/desktop/middle-section/news-feed/news-feed.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/desktop/trendingbar/trendingbar.component.html","webpack:///src/app/desktop/trendingbar/trendingbar.component.ts","webpack:///src/app/desktop/about/about.component.ts","webpack:///src/app/desktop/about/about.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/desktop/leftsidebar/leftsidebar.component.ts","webpack:///src/app/desktop/leftsidebar/leftsidebar.component.html","webpack:///src/app/desktop/middle-section/middle-section.component.ts","webpack:///src/app/desktop/middle-section/middle-section.component.html","webpack:///src/app/desktop/desktop.component.ts","webpack:///src/app/desktop/desktop.component.html","webpack:///src/app/desktop/middle-section/news-feed/newsfeed-resolver.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/desktop/middle-section/news-feed/news-feed.component.ts","webpack:///src/app/desktop/middle-section/news-feed/news-feed.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["NewsFeedService","http","get","post","environment","production","TrendingbarComponent","trends","AboutComponent","AppComponent","title","AppModule","LeftsidebarComponent","faHome","faInfoCircle","MiddleSectionComponent","DesktopComponent","NewsfeedResolverService","newsFeedService","route","state","getFeeds","routes","path","component","children","resolve","feeds","AppRoutingModule","forRoot","NewsFeedComponent","activatedRoute","faHeart","faComment","colorflag","heartColor","data","subscribe","event","target","offsetHeight","scrollTop","scrollHeight","push","form","message","controls","value","length","unshift","addPost","resetForm","postMessage","onScroll","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Feedbox} from './feedbox.model';\nimport {Post} from './post.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewsFeedService {\n  constructor(private http: HttpClient) {}\n  getFeeds(): Observable<Feedbox[]> {\n    return this.http.get(`http://localhost:3000/api`) as Observable<Feedbox[]>;\n  }\n\n  addPost(post: Post): Observable<Post> {\n    return this.http.post<Post>(`http://localhost:3000/api`, post);\n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"trendingBarContainer\">\n  <div class=\"title\">\n    Trending for you\n  </div>\n  <div class=\"trends\">\n    <div *ngFor=\"let i of trends\" class=\"individualTrend\">\n      #{{i}}\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-trendingbar',\n  templateUrl: './trendingbar.component.html',\n  styleUrls: ['./trendingbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrendingbarComponent implements OnInit {\n\n  trends: string[] = [ \"I love soup\", \"Cats\", \"Jake Paul\", \"Simps\", \"Meghan Markle\"];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n<h1 class=\"header\">About</h1>\n<p>\nFakebook is a new site, designed to get us talking about social\nmedia. <br>\n\nThe site is designed to emulate the experience of using a social\nnetworking website like Facebook or Twitter. However, rather\nthan posts from real people, our site is populated by friendly\nbots. You can get involved too- try posting on the home page\nand see your post appear on the timeline! Your posts may then appear\nin the timelines of other users in the future, contributing to\nthe nonsense! <br>\n\nOn the timeline you’ll also find fact boxes, offering thoughts\nabout how social media works, and how it may be affecting you.\nYou might find this just as addictive as a real social media\nsite- and that’s the point. On fakebook, social media’s addictive\nqualities won’t just be driving engagement- they’ll be helping\nyou to understand the modern internet. <br>\n\nOn fakebook, we’re using some of the features that keep you\nengaged on social media to start conversations about why social\nmedia works- and whether it’s working for us.\n<br>\nFakebook. The posts are fake, but the addiction is real.\n<br>\n </p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'fakebook';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DesktopComponent } from './desktop/desktop.component';\nimport { LeftsidebarComponent } from './desktop/leftsidebar/leftsidebar.component';\nimport { TrendingbarComponent } from './desktop/trendingbar/trendingbar.component';\nimport { MiddleSectionComponent } from './desktop/middle-section/middle-section.component';\nimport { NewsFeedComponent } from './desktop/middle-section/news-feed/news-feed.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule }   from '@angular/forms';\nimport { AboutComponent } from './desktop/about/about.component';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DesktopComponent,\n    LeftsidebarComponent,\n    TrendingbarComponent,\n    MiddleSectionComponent,\n    NewsFeedComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [\n    DesktopComponent,\n    LeftsidebarComponent,\n    TrendingbarComponent,\n    MiddleSectionComponent,\n    NewsFeedComponent,\n    AboutComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-leftsidebar',\n  templateUrl: './leftsidebar.component.html',\n  styleUrls: ['./leftsidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftsidebarComponent implements OnInit {\n  faHome = faHome;\n  faInfoCircle = faInfoCircle;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n  <a class=\"link\" routerLink=''>\n    <fa-icon [icon]=\"faHome\"></fa-icon>\n    &nbsp;&nbsp;Home\n  </a>\n  <a class=\"link\" routerLink='about'>\n    <fa-icon [icon]=\"faInfoCircle\"></fa-icon>\n    &nbsp;&nbsp;About\n  </a>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n@Component({\n  selector: 'app-middle-section',\n  templateUrl: './middle-section.component.html',\n  styleUrls: ['./middle-section.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MiddleSectionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","<app-news-feed></app-news-feed>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-desktop',\n  templateUrl: './desktop.component.html',\n  styleUrls: ['./desktop.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DesktopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home-container\">\n  <div class=\"home-header\">\n    <div class=\"home-header-content\">\n      <h1 class=\"title\">FAKEBOOK</h1>\n      <h2 class=\"description\">a generative nonsense social media feed</h2>\n    </div>\n  </div>\n  <div class=\"home-body\">\n    <div class=\"leftSideBar\">\n      <app-leftsidebar></app-leftsidebar>\n    </div>\n    <div class=\"middleSection\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"trendingBar\">\n      <app-trendingbar></app-trendingbar>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Feedbox } from './feedbox.model';\nimport { Observable } from 'rxjs';\nimport { NewsFeedService } from './news-feed.service';\nimport { Resolve,ActivatedRouteSnapshot,RouterStateSnapshot } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsfeedResolverService implements Resolve<Feedbox[]>{\n\n  constructor(private newsFeedService: NewsFeedService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \n  Observable<Feedbox[]> | Promise<Feedbox[]> | Feedbox[] {\n    return this.newsFeedService.getFeeds();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './desktop/about/about.component';\nimport { DesktopComponent } from './desktop/desktop.component';\nimport { MiddleSectionComponent } from './desktop/middle-section/middle-section.component';\nimport { NewsfeedResolverService } from './desktop/middle-section/news-feed/newsfeed-resolver.service';\n\nconst routes: Routes = [\n  { path: '',\n    component: DesktopComponent,\n    children: [ {path: 'about', component: AboutComponent},\n                {\n                  path: '', \n                  component: MiddleSectionComponent,\n                  resolve: {feeds: NewsfeedResolverService}\n                },]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ChangeDetectionStrategy,HostListener } from '@angular/core';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { NewsFeedService } from './news-feed.service';\nimport { Feedbox } from './feedbox.model';\nimport { Injectable } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\n@Component({\n  selector: 'app-news-feed',\n  templateUrl: './news-feed.component.html',\n  styleUrls: ['./news-feed.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NewsFeedComponent implements OnInit {\n  faHeart = faHeart;\n  faComment = faComment;\n  feeds: Feedbox[] | any[] = [];\n  colorflag: number;\n  heartColor: string;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private newsFeedService: NewsFeedService) {\n    this.colorflag = 0;\n    this.heartColor = \"rgb(150, 165, 255)\";\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(data => {\n        this.feeds = data.feeds;\n    });\n  }\n\n  @HostListener('scroll', ['$event'])\n  onScroll(event: any): void {\n    if (event.target.offsetHeight + event.target.scrollTop >= (event.target.scrollHeight * 0.75)) {\n      this.newsFeedService\n      .getFeeds()\n      .subscribe((feeds: Feedbox[]) => {\n        this.feeds.push(...feeds);\n      });\n    }\n  }\n\n  updateButtonColor(): void {\n    this.colorflag++;\n    this.colorflag = this.colorflag % 2;\n    if (this.colorflag == 0) {\n      this.heartColor = \"rgb(150, 165, 255)\";\n    } else {\n      this.heartColor = \"red\";\n    }\n  }\n\n  postMessage(form: NgForm): void {\n    var message:string = form.controls['post_text'].value;\n    if (message != null && message.length > 0) {\n      this.feeds.unshift(\n        {\n          \"user_id\": 100,\n          \"post_number\": 100,\n          \"post_text\": \"\" + message,\n          \"timestamp\": \"blah\",\n          \"likes\": 0,\n          \"is_fact\": false,\n          \"fact_ref\": \"blah\",\n          \"no_comments\": 0,\n          \"user_info\": [{\"user_id\": 100,\n              \"user_name\": \"You\",\n              \"pic_filename\": \"Je ne sais pas\"}],\n          \"username\": \"You\"\n        }\n      );\n      this.newsFeedService.addPost({\n        \"user_id\": 0,\n        \"post_number\":0,\n        \"post_text\": \"\" + message,\n        \"timestamp\": \"blah\",\n        \"likes\": 0,\n        \"is_fact\": false,\n        \"fact_ref\": \"blah\",\n        \"no_comments\": 0\n      }).subscribe();\n    }\n    form.resetForm();\n  }\n}\n","<div class=\"writePost\">\n  <form #form=\"ngForm\" (ngSubmit)=\"postMessage(form)\">\n    <textarea rows=\"2\" required ngModel name=\"post_text\" placeholder=\"What's happening\"></textarea>\n    <input type=\"submit\" value=\"post\">\n  </form>\n</div>\n\n<div class=\"newsFeed\"\n  (scroll)=\"onScroll($event)\">\n  <div class=\"box\" *ngFor=\"let feedbox of feeds\">\n    <div *ngIf=\"feedbox.is_fact==true; else elseBlock\" class=\"feed\" style=\"background-color:rgb(224, 228, 255);border-radius: 1vh;\">\n        <div class=\"feed_left\">\n          <img src=\"assets/profile_pic.png\" alt=\"little_keanu\">\n        </div>\n\n        <div class=\"feed_right\">\n          <div class=\"username\">\n            @FAKEBOOK-FACT\n          </div>\n          <div class=\"feed_content\">\n            {{feedbox.post_text}}\n          </div>\n        </div>\n    </div>\n\n    <ng-template #elseBlock class=\"feed\">\n        <div class=\"feed\">\n          <div class=\"feed_left\">\n            <img src=\"assets/profile_pic.png\" alt=\"little_keanu\">\n          </div>\n\n          <div class=\"feed_right\">\n            <div class=\"username\">\n              @{{feedbox.user_info[0].user_name}}\n            </div>\n            <div class=\"feed_content_post\">\n              <div class=\"feed_content_text\">\n                {{feedbox.post_text}}\n              </div>\n\n              <div class=\"feed_content_footer\">\n                <div class=\"heart-container\">\n                  <button class=\"heartButton\" (click)=\"updateButtonColor()\" [style.color]=\"heartColor\">\n                    <fa-icon [icon]=\"faHeart\" class=\"heart\"></fa-icon>\n                  </button>\n                  <p class=\"heart_number\">{{feedbox.likes}}</p>\n                </div>\n                <div class=\"comment-container\">\n                  <button class=\"commentButton\">\n                    <fa-icon [icon]=\"faComment\" class=\"comment\"></fa-icon>\n                  </button>\n                  <p class=\"comment_number\">{{feedbox.no_comments}}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </ng-template>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}