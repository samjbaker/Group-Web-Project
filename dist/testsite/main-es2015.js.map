{"version":3,"sources":["./src/app/desktop/middle-section/news-feed/news-feed.service.ts","./src/environments/environment.ts","./src/app/desktop/trendingbar/trendingbar.component.html","./src/app/desktop/trendingbar/trendingbar.component.ts","./src/app/desktop/about/about.component.ts","./src/app/desktop/about/about.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/desktop/leftsidebar/leftsidebar.component.ts","./src/app/desktop/leftsidebar/leftsidebar.component.html","./src/app/desktop/middle-section/middle-section.component.ts","./src/app/desktop/middle-section/middle-section.component.html","./src/app/desktop/desktop.component.ts","./src/app/desktop/desktop.component.html","./src/app/desktop/middle-section/news-feed/newsfeed-resolver.service.ts","./src/app/app-routing.module.ts","./src/app/desktop/middle-section/news-feed/news-feed.component.ts","./src/app/desktop/middle-section/news-feed/news-feed.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Feedbox} from './feedbox.model';\nimport {Post} from './post.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewsFeedService {\n  constructor(private http: HttpClient) {}\n  getFeeds(): Observable<Feedbox[]> {\n    return this.http.get(`http://localhost:3000/api`) as Observable<Feedbox[]>;\n  }\n\n  addPost(post: Post): Observable<Post> {\n    return this.http.post<Post>(`http://localhost:3000/api`, post);\n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"trendingBarContainer\">\n  <div class=\"title\">\n    Trending for you\n  </div>\n  <div class=\"trends\">\n    <div *ngFor=\"let i of trends\" class=\"individualTrend\">\n      #{{i}}\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-trendingbar',\n  templateUrl: './trendingbar.component.html',\n  styleUrls: ['./trendingbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrendingbarComponent implements OnInit {\n\n  trends: string[] = [ \"I love soup\", \"Cats\", \"Jake Paul\", \"Simps\", \"Meghan Markle\"];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n<h1 class=\"header\">About</h1>\n<p>\nFakebook is a new site, designed to get us talking about social\nmedia. <br>\n\nThe site is designed to emulate the experience of using a social\nnetworking website like Facebook or Twitter. However, rather\nthan posts from real people, our site is populated by friendly\nbots. You can get involved too- try posting on the home page\nand see your post appear on the timeline! Your posts may then appear\nin the timelines of other users in the future, contributing to\nthe nonsense! <br>\n\nOn the timeline you’ll also find fact boxes, offering thoughts\nabout how social media works, and how it may be affecting you.\nYou might find this just as addictive as a real social media\nsite- and that’s the point. On fakebook, social media’s addictive\nqualities won’t just be driving engagement- they’ll be helping\nyou to understand the modern internet. <br>\n\nOn fakebook, we’re using some of the features that keep you\nengaged on social media to start conversations about why social\nmedia works- and whether it’s working for us.\n<br>\nFakebook. The posts are fake, but the addiction is real.\n<br>\n </p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'fakebook';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DesktopComponent } from './desktop/desktop.component';\nimport { LeftsidebarComponent } from './desktop/leftsidebar/leftsidebar.component';\nimport { TrendingbarComponent } from './desktop/trendingbar/trendingbar.component';\nimport { MiddleSectionComponent } from './desktop/middle-section/middle-section.component';\nimport { NewsFeedComponent } from './desktop/middle-section/news-feed/news-feed.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule }   from '@angular/forms';\nimport { AboutComponent } from './desktop/about/about.component';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DesktopComponent,\n    LeftsidebarComponent,\n    TrendingbarComponent,\n    MiddleSectionComponent,\n    NewsFeedComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [\n    DesktopComponent,\n    LeftsidebarComponent,\n    TrendingbarComponent,\n    MiddleSectionComponent,\n    NewsFeedComponent,\n    AboutComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-leftsidebar',\n  templateUrl: './leftsidebar.component.html',\n  styleUrls: ['./leftsidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftsidebarComponent implements OnInit {\n  faHome = faHome;\n  faInfoCircle = faInfoCircle;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n  <a class=\"link\" routerLink=''>\n    <fa-icon [icon]=\"faHome\"></fa-icon>\n    &nbsp;&nbsp;Home\n  </a>\n  <a class=\"link\" routerLink='about'>\n    <fa-icon [icon]=\"faInfoCircle\"></fa-icon>\n    &nbsp;&nbsp;About\n  </a>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n@Component({\n  selector: 'app-middle-section',\n  templateUrl: './middle-section.component.html',\n  styleUrls: ['./middle-section.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MiddleSectionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","<app-news-feed></app-news-feed>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-desktop',\n  templateUrl: './desktop.component.html',\n  styleUrls: ['./desktop.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DesktopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home-container\">\n  <div class=\"home-header\">\n    <div class=\"home-header-content\">\n      <h1 class=\"title\">FAKEBOOK</h1>\n      <h2 class=\"description\">a generative nonsense social media feed</h2>\n    </div>\n  </div>\n  <div class=\"home-body\">\n    <div class=\"leftSideBar\">\n      <app-leftsidebar></app-leftsidebar>\n    </div>\n    <div class=\"middleSection\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"trendingBar\">\n      <app-trendingbar></app-trendingbar>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Feedbox } from './feedbox.model';\nimport { Observable } from 'rxjs';\nimport { NewsFeedService } from './news-feed.service';\nimport { Resolve,ActivatedRouteSnapshot,RouterStateSnapshot } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsfeedResolverService implements Resolve<Feedbox[]>{\n\n  constructor(private newsFeedService: NewsFeedService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \n  Observable<Feedbox[]> | Promise<Feedbox[]> | Feedbox[] {\n    return this.newsFeedService.getFeeds();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './desktop/about/about.component';\nimport { DesktopComponent } from './desktop/desktop.component';\nimport { MiddleSectionComponent } from './desktop/middle-section/middle-section.component';\nimport { NewsfeedResolverService } from './desktop/middle-section/news-feed/newsfeed-resolver.service';\n\nconst routes: Routes = [\n  { path: '',\n    component: DesktopComponent,\n    children: [ {path: 'about', component: AboutComponent},\n                {\n                  path: '', \n                  component: MiddleSectionComponent,\n                  resolve: {feeds: NewsfeedResolverService}\n                },]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ChangeDetectionStrategy,HostListener } from '@angular/core';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { NewsFeedService } from './news-feed.service';\nimport { Feedbox } from './feedbox.model';\nimport { Injectable } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\n@Component({\n  selector: 'app-news-feed',\n  templateUrl: './news-feed.component.html',\n  styleUrls: ['./news-feed.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NewsFeedComponent implements OnInit {\n  faHeart = faHeart;\n  faComment = faComment;\n  feeds: Feedbox[] | any[] = [];\n  colorflag: number;\n  heartColor: string;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private newsFeedService: NewsFeedService) {\n    this.colorflag = 0;\n    this.heartColor = \"rgb(150, 165, 255)\";\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(data => {\n        this.feeds = data.feeds;\n    });\n  }\n\n  @HostListener('scroll', ['$event'])\n  onScroll(event: any): void {\n    if (event.target.offsetHeight + event.target.scrollTop >= (event.target.scrollHeight * 0.75)) {\n      this.newsFeedService\n      .getFeeds()\n      .subscribe((feeds: Feedbox[]) => {\n        this.feeds.push(...feeds);\n      });\n    }\n  }\n\n  updateButtonColor(): void {\n    this.colorflag++;\n    this.colorflag = this.colorflag % 2;\n    if (this.colorflag == 0) {\n      this.heartColor = \"rgb(150, 165, 255)\";\n    } else {\n      this.heartColor = \"red\";\n    }\n  }\n\n  postMessage(form: NgForm): void {\n    var message:string = form.controls['post_text'].value;\n    if (message != null && message.length > 0) {\n      this.feeds.unshift(\n        {\n          \"user_id\": 100,\n          \"post_number\": 100,\n          \"post_text\": \"\" + message,\n          \"timestamp\": \"blah\",\n          \"likes\": 0,\n          \"is_fact\": false,\n          \"fact_ref\": \"blah\",\n          \"no_comments\": 0,\n          \"user_info\": [{\"user_id\": 100,\n              \"user_name\": \"You\",\n              \"pic_filename\": \"Je ne sais pas\"}],\n          \"username\": \"You\"\n        }\n      );\n      this.newsFeedService.addPost({\n        \"user_id\": 0,\n        \"post_number\":0,\n        \"post_text\": \"\" + message,\n        \"timestamp\": \"blah\",\n        \"likes\": 0,\n        \"is_fact\": false,\n        \"fact_ref\": \"blah\",\n        \"no_comments\": 0\n      }).subscribe();\n    }\n    form.resetForm();\n  }\n}\n","<div class=\"writePost\">\n  <form #form=\"ngForm\" (ngSubmit)=\"postMessage(form)\">\n    <textarea rows=\"2\" required ngModel name=\"post_text\" placeholder=\"What's happening\"></textarea>\n    <input type=\"submit\" value=\"post\">\n  </form>\n</div>\n\n<div class=\"newsFeed\"\n  (scroll)=\"onScroll($event)\">\n  <div class=\"box\" *ngFor=\"let feedbox of feeds\">\n    <div *ngIf=\"feedbox.is_fact==true; else elseBlock\" class=\"feed\" style=\"background-color:rgb(224, 228, 255);border-radius: 1vh;\">\n        <div class=\"feed_left\">\n          <img src=\"assets/profile_pic.png\" alt=\"little_keanu\">\n        </div>\n\n        <div class=\"feed_right\">\n          <div class=\"username\">\n            @FAKEBOOK-FACT\n          </div>\n          <div class=\"feed_content\">\n            {{feedbox.post_text}}\n          </div>\n        </div>\n    </div>\n\n    <ng-template #elseBlock class=\"feed\">\n        <div class=\"feed\">\n          <div class=\"feed_left\">\n            <img src=\"assets/profile_pic.png\" alt=\"little_keanu\">\n          </div>\n\n          <div class=\"feed_right\">\n            <div class=\"username\">\n              @{{feedbox.user_info[0].user_name}}\n            </div>\n            <div class=\"feed_content_post\">\n              <div class=\"feed_content_text\">\n                {{feedbox.post_text}}\n              </div>\n\n              <div class=\"feed_content_footer\">\n                <div class=\"heart-container\">\n                  <button class=\"heartButton\" (click)=\"updateButtonColor()\" [style.color]=\"heartColor\">\n                    <fa-icon [icon]=\"faHeart\" class=\"heart\"></fa-icon>\n                  </button>\n                  <p class=\"heart_number\">{{feedbox.likes}}</p>\n                </div>\n                <div class=\"comment-container\">\n                  <button class=\"commentButton\">\n                    <fa-icon [icon]=\"faComment\" class=\"comment\"></fa-icon>\n                  </button>\n                  <p class=\"comment_number\">{{feedbox.no_comments}}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </ng-template>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}